---

- name: Copy webhookconfig.yaml
  when: init_cluster and started_kubelet
  copy:
    src: files/webhookconfig.yaml
    dest: /etc/kubernetes/pki/webhookconfig.yaml


- name: Copy k8s-keystone-auth.yaml
  when: init_cluster and started_kubelet
  copy:
    src: files/k8s-keystone-auth.yaml
    dest: k8s-keystone-auth.yaml


- name: Copy the OS private key to /etc/kubernetes/pki/
  when: init_cluster and started_kubelet
  become: yes
  copy:
    src: "{{ OS_KEY_PRIVATE }}"
    dest: /etc/kubernetes/pki/key_cert.pem


- name: Copy the OS CA cert to /etc/kubernetes/pki/
  when: init_cluster and started_kubelet
  become: yes
  copy:
    src: "{{ OS_CACERT }}"
    dest: /etc/kubernetes/pki/ca_cert.pem


- name: Ensure k8s-auth-policy.yaml is set
  template:
    src=templates/k8s-auth-policy.yaml.j2
    dest=k8s-auth-policy.yaml


- name: Create the service account for k8s-keystone-auth
  when: init_cluster and started_kubelet
  command: |
    kubectl --kubeconfig={{ kubeadmin_config }} \
        create clusterrolebinding default-cluster-admin \
            --clusterrole=cluster-admin \
            --serviceaccount=kube-system:default
  register: result


- name: Create the keystone-auth-certs secret
  when: init_cluster and started_kubelet
  become: yes
  command: |
    kubectl --kubeconfig={{ kubeadmin_config }} \
        create secret generic keystone-auth-certs \
        --from-literal=os_auth_url="{{ OS_AUTH_URL }}"
        --from-file=cert-file=/etc/kubernetes/pki/apiserver.crt \
        --from-file=key-file=/etc/kubernetes/pki/apiserver.key \
        --from-file=ca_cert.pem=/etc/kubernetes/pki/ca_cert.pem \
        -n kube-system
  register: result


- name: Deploy the policies 'k8s-auth-policy'
  when: init_cluster and started_kubelet
  command: |
    kubectl --kubeconfig={{ kubeadmin_config }} apply -f ./k8s-auth-policy.yaml
  register: result


- name: Deploy the k8s-keystone-auth webhook service
  when: init_cluster and started_kubelet
  command: |
    kubectl --kubeconfig={{ kubeadmin_config }} apply -f ./k8s-keystone-auth.yaml
  register: result


- name: Describe the service k8s-keystone-auth-service
  when: init_cluster and started_kubelet
  command: |
    kubectl --kubeconfig={{ kubeadmin_config }} -n kube-system describe services k8s-keystone-auth-service
  register: result
  until: result.stdout.find(":8443") != -1
  retries: 10
  delay: 10


- name: Set the webhook options in /etc/kubernetes/manifests/kube-apiserver.yaml
  template:
    src=templates/kube-apiserver.yaml.j2
    dest=/etc/kubernetes/manifests/kube-apiserver.yaml


- name: Wait for the api server port 6443 to become open on the master, don't start checking for 10 seconds
  wait_for:
    port: 6443
    delay: 10
