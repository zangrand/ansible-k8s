! Configuration File for keepalived

global_defs {
   notification_email {
     sergio.traldi@pd.infn.it
   }
   notification_email_from sergio.traldi@pd.infn.it 
   smtp_server 192.84.143.16
   smtp_connect_timeout 30
   router_id K8ROUTER
}

vrrp_script chk_haproxy {
   script "/usr/bin/killall -0 haproxy"   # verify the pid existance
   interval 2                             # check every 2 seconds
   fall 2
   rise 2
}

vrrp_instance VI_1 {
   interface {{ ansible_default_ipv4.interface }}                # interface to monitor
   {% if hostvars[groups['master'][0]]['ansible_host'] == ansible_default_ipv4.address %}
      state MASTER                  # On first host we give the MASTER state on the other the BACKUP
   {% else %}
      state BACKUP                  # On first host we give the MASTER state on the other the BACKUP
   {% endif %}

   virtual_router_id 51          # Assign one ID for this route
   {% if hostvars[groups['master'][0]]['ansible_host'] == ansible_default_ipv4.address %}
      priority 110                  # 110 on master, 100 on backup
   {% else %}
      priority 100                  # 110 on master, 100 on backup
   {% endif %} 
   advert_int 1
   unicast_peer {
     {% if hostvars[groups['master'][0]]['ansible_host'] != ansible_default_ipv4.address %}
        {{ hostvars[groups['master'][0]]['ansible_host'] }}
     {% endif %}
     {% if hostvars[groups['master'][1]]['ansible_host'] != ansible_default_ipv4.address %}
        {{ hostvars[groups['master'][1]]['ansible_host'] }}
     {% endif %}
     {% if hostvars[groups['master'][2]]['ansible_host'] != ansible_default_ipv4.address %}
        {{ hostvars[groups['master'][2]]['ansible_host'] }}
     {% endif %}
   }
   authentication {
       auth_type PASS
       auth_pass 1111
   }
   virtual_ipaddress {
       {{ keepalived_vip }} dev {{ ansible_default_ipv4.interface }} # the virtual IP
   }
   track_script {
       chk_haproxy
   }
}
