---

- name: Copy the OS key cert to /etc/kubernetes/pki/
  when: init_cluster and started_kubelet
  become: yes
  copy:
    src: "{{ OS_KEY_CERT }}"
    dest: /etc/kubernetes/pki/key_cert.pem


- name: Copy the OS CA cert to /etc/kubernetes/pki/
  when: init_cluster and started_kubelet
  become: yes
  copy:
    src: "{{ OS_CACERT }}"
    dest: /etc/kubernetes/pki/ca_cert.pem


- name: Create the secret for os-k8s-node
  when: init_cluster and started_kubelet
  command: |
    kubectl --kubeconfig={{ kubeadmin_config }} \
        create secret generic os-k8s-node \
        --from-literal=OS_AUTH_URL="{{ OS_AUTH_URL }}" \
        --from-literal=OS_AUTH_TYPE="{{ OS_AUTH_TYPE }}" \
        --from-literal=OS_PROJECT_ID="{{ OS_PROJECT_ID }}" \
        --from-literal=OS_PROJECT_NAME="{{ OS_PROJECT_NAME }}" \
        --from-literal=OS_USERNAME="{{ OS_USERNAME|default('NA', true) }}" \
        --from-literal=OS_PASSWORD="{{ OS_PASSWORD|default('NA', true) }}" \
        --from-literal=OS_TOKEN="{{ OS_TOKEN|default('NA', true) }}" \
        --from-literal=OS_INTERFACE="{{ OS_INTERFACE }}" \
        --from-literal=OS_IDENTITY_API_VERSION="{{ OS_IDENTITY_API_VERSION }}" \
        --from-literal=OS_VM_NAME="{{ OS_NODE_NAME }}" \
        --from-literal=OS_IMAGE="{{ OS_NODE_IMAGE }}" \
        --from-literal=OS_FLAVOR="{{ OS_NODE_FLAVOR }}" \
        --from-literal=OS_NETWORK="{{ OS_NETWORK }}" \
        --from-literal=OS_SECURITY_GROUP="{{ OS_SECURITY_GROUP }}" \
        --from-literal=OS_KEY_NAME="{{ OS_KEY_NAME }}" \
        --from-literal=OS_KEY_CERT="/etc/kubernetes/pki/os_key_cert.pem" \
        --from-literal=OS_CACERT="/etc/kubernetes/pki/os_ca_cert.pem" \
        --from-literal=K8S_MASTER_HOST="{{ hostvars[groups['master'][0]]['private_ip'] }}" \
        --from-literal=K8S_CA_CERT_HASH="{{ k8s_ca_cert_hash.stdout }}" \
        --from-file=os_ca_cert.pem="/etc/kubernetes/pki/ca_cert.pem" \
        --from-file=os_key_cert.pem="/etc/kubernetes/pki/key_cert.pem" \
        -n kube-system
  register: create_result


- name: Ensure keepalived conf is set
  template:
    src=templates/os-k8s-node.yaml.j2
    dest=os-k8s-node.yaml


- name: Create the nodes
  command: |
    kubectl --kubeconfig={{ kubeadmin_config }} apply -f ./os-k8s-node.yaml
  register: create_result

